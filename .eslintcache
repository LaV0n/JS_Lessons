[{"D:\\Code\\JS Lessons\\lap0\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"1","D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson1\\lesson1.tsx":"2","D:\\Code\\JS Lessons\\lap0\\src\\redux\\currencyReducer.ts":"3","D:\\Code\\JS Lessons\\lap0\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"4","D:\\Code\\JS Lessons\\lap0\\src\\redux\\actions.ts":"5","D:\\Code\\JS Lessons\\lap0\\src\\index.tsx":"6","D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson2\\lesson2.ts":"7","D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson3\\API.ts":"8","D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson4\\lesson_4.ts":"9","D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson5\\lesson5.ts":"10","D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson6\\lesson6.ts":"11","D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson7\\lesson7.ts":"12","D:\\Code\\JS Lessons\\lap0\\src\\App.tsx":"13","D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson8\\lesson8.ts":"14","D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson8\\lesson_8.js":"15","D:\\Code\\JS Lessons\\lap0\\src\\test1.js":"16","D:\\Code\\JS Lessons\\lap0\\src\\test2.js":"17","E:\\JS\\it-incubator\\JS Lessons\\src\\index.tsx":"18","E:\\JS\\it-incubator\\JS Lessons\\src\\redux\\currencyReducer.ts":"19","E:\\JS\\it-incubator\\JS Lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"20","E:\\JS\\it-incubator\\JS Lessons\\src\\App.tsx":"21","E:\\JS\\it-incubator\\JS Lessons\\src\\lessons\\lesson2\\lesson2.tsx":"22","E:\\JS\\it-incubator\\JS Lessons\\src\\lessons\\lesson4\\lesson_4.ts":"23"},{"size":3824,"mtime":1609761222531,"results":"24","hashOfConfig":"25"},{"size":759,"mtime":1609756582463,"results":"26","hashOfConfig":"25"},{"size":1088,"mtime":1609753971088,"results":"27","hashOfConfig":"25"},{"size":3871,"mtime":1609757735301,"results":"28","hashOfConfig":"25"},{"size":843,"mtime":1609760554269,"results":"29","hashOfConfig":"25"},{"size":319,"mtime":1609752860853,"results":"30","hashOfConfig":"25"},{"size":2890,"mtime":1609829398212,"results":"31","hashOfConfig":"25"},{"size":326,"mtime":1601709172000,"results":"32","hashOfConfig":"25"},{"size":4087,"mtime":1605030193467,"results":"33","hashOfConfig":"25"},{"size":4886,"mtime":1602915922000,"results":"34","hashOfConfig":"25"},{"size":3540,"mtime":1609845248077,"results":"35","hashOfConfig":"25"},{"size":2044,"mtime":1609845289163,"results":"36","hashOfConfig":"25"},{"size":613,"mtime":1609924764444,"results":"37","hashOfConfig":"25"},{"size":576,"mtime":1609852867237,"results":"38","hashOfConfig":"25"},{"size":6168,"mtime":1609924725964,"results":"39","hashOfConfig":"25"},{"size":1229,"mtime":1609970905120,"results":"40","hashOfConfig":"25"},{"size":397,"mtime":1609971686583,"results":"41","hashOfConfig":"25"},{"size":319,"mtime":1609756460000,"results":"42","hashOfConfig":"43"},{"size":1088,"mtime":1609757570000,"results":"44","hashOfConfig":"43"},{"size":3871,"mtime":1609761334000,"results":"45","hashOfConfig":"43"},{"size":625,"mtime":1658919077534,"results":"46","hashOfConfig":"43"},{"size":7214,"mtime":1659265670541,"results":"47","hashOfConfig":"43"},{"size":4582,"mtime":1659266888642,"results":"48","hashOfConfig":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12twxt",{"filePath":"51","messages":"52","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u681lg",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Code\\JS Lessons\\lap0\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",[],"D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson1\\lesson1.tsx",["97"],"D:\\Code\\JS Lessons\\lap0\\src\\redux\\currencyReducer.ts",[],"D:\\Code\\JS Lessons\\lap0\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"D:\\Code\\JS Lessons\\lap0\\src\\redux\\actions.ts",[],"D:\\Code\\JS Lessons\\lap0\\src\\index.tsx",[],"D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson2\\lesson2.ts",["98"],"D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson3\\API.ts",["99","100"],"D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson4\\lesson_4.ts",["101"],"D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson5\\lesson5.ts",["102","103","104","105","106"],"D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson6\\lesson6.ts",["107"],"D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson7\\lesson7.ts",["108"],"console.log('Lesson 7');\r\n\r\n// __Proto__\r\n// https://learn.javascript.ru/prototype-inheritance\r\n// https://habr.com/ru/post/518360/\r\n// https://learn.javascript.ru/native-prototypes\r\n\r\n// Prototype\r\n// https://learn.javascript.ru/function-prototype\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype\r\n\r\n\r\n// https://www.youtube.com/watch?v=aQkgUUmUJy4&t=21s\r\n// https://www.youtube.com/watch?v=b55hiUlhAzI\r\n\r\n\r\n//Task 01\r\n// Реализовать класс Animal который принимает name(по умолчанию 'Animal') в качестве параметра, у которого будет 3\r\n// метода walk, eat, sleep - каждый метод должен выводить в консоль строку имя + действие. Пример:\r\n// walk => `${this.name} walking`\r\n// проверить, что методы работают\r\n\r\n\r\n//Task 02\r\n// Реализовать класс Monkey на базе класса Animal,  конструктор принимает name(по умолчанию 'Monkey') в качестве\r\n// параметра, реализовать методы roar и climb аналогично классу Animal\r\n// проверить, что все методы работают\r\n\r\n\r\n//Task 03\r\n// Реализовать класс Human на базе класса Monkey, конструктор принимает name(по умолчанию 'Human') в качестве\r\n// параметра, реализовать методы speak и think аналогично классу Animal\r\n// проверить, что все методы работают\r\n\r\n\r\n// Task 04\r\n// Реализовать таски 01-03 через функции конструкторы в отдельном JS файле, реализовать наследование\r\n\r\n\r\n// Task 05\r\n// Используя метод Apply реализовать свой собственный метод bind\r\n\r\n\r\n// just a plug\r\nexport default () => {};","D:\\Code\\JS Lessons\\lap0\\src\\App.tsx",[],"D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson8\\lesson8.ts",["109"],"D:\\Code\\JS Lessons\\lap0\\src\\lessons\\lesson8\\lesson_8.js",["110","111","112","113"],"D:\\Code\\JS Lessons\\lap0\\src\\test1.js",[],"D:\\Code\\JS Lessons\\lap0\\src\\test2.js",["114"],"E:\\JS\\it-incubator\\JS Lessons\\src\\index.tsx",[],"E:\\JS\\it-incubator\\JS Lessons\\src\\redux\\currencyReducer.ts",[],"E:\\JS\\it-incubator\\JS Lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"E:\\JS\\it-incubator\\JS Lessons\\src\\App.tsx",[],"E:\\JS\\it-incubator\\JS Lessons\\src\\lessons\\lesson2\\lesson2.tsx",["115","116"],"import React from \"react\";\r\n\r\n\r\nconsole.log('lesson 2');\r\n\r\n// Lexical environment\r\n// http://jsflow.org/docs/lex-env/\r\n\r\n//// Closure\r\n// https://learn.javascript.ru/closure\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Closures\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-%D0%B7%D0%B0%D0%BC%D1%8B%D0%BA%D0%B0%D0%BD%D0%B8%D1%8F-%D0%B2-javascript-%D1%80%D0%B0%D0%B7-%D0%B8-%D0%BD%D0%B0%D0%B2%D1%81%D0%B5%D0%B3%D0%B4%D0%B0-c211805b6898\r\n// https://www.youtube.com/watch?v=pahO5XjnfLA\r\n\r\n//// Сurrying\r\n// https://learn.javascript.ru/currying-partials\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-%D0%BA%D0%B0%D1%80%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B2-javascript-5ec4a1d88827\r\n\r\n// Pattern Module\r\n// https://habr.com/ru/company/ruvds/blog/419997/\r\n\r\n// Recursion\r\n// https://learn.javascript.ru/recursion\r\n// https://www.youtube.com/watch?v=Kuq6oIN3PH0\r\n\r\n\r\n// Task 01\r\n// Реализовать функцию sum которая суммирует 2 числа следующим образом sum(3)(6) === 9\r\n\r\n\r\nfunction sum(x: number) {\r\n    function subsum(y: number) {\r\n        return x + y\r\n    }\r\n\r\n    return subsum\r\n}\r\n\r\nconsole.log(sum(3)(6))\r\n\r\n// Task 02\r\n// Реализовать функцию makeCounter которая работает следующим образом:\r\n// const counter = makeCounter();\r\n// counter(); // 1\r\n// counter(); // 2\r\n// const counter2 = makeCounter();\r\n// counter2(); // 1\r\n// counter(); // 3\r\n\r\nconst makeCounter = () => {\r\n    let count = 0;\r\n    return () => {\r\n        return count++\r\n    }\r\n}\r\nlet counter = makeCounter();\r\nconst counter2 = makeCounter();\r\nconsole.log(\"T1 counter : \" + counter())\r\nconsole.log(\"T1 counter : \" + counter())\r\nconsole.log(\"T1 counter2 : \" + counter2())\r\nconsole.log(\"T1 counter : \" + counter())\r\n\r\n// Task 03\r\n// Переписать функцию из Task 02 так, что бы она принимала число в качестве аргумента и это число было стартовым значением счетчика\r\n// и возвращала следующий объект методов:\r\n// increase: +1\r\n// decrease: -1\r\n// reset: установить счетчик в 0;\r\n// set: установить счетчик в заданное значение;\r\n\r\nconst newCounter = (x: number) => {\r\n    let count = x;\r\n    return {\r\n        increase: () => {\r\n            return () => {\r\n                return ++count\r\n            }\r\n        },\r\n        decrease: () => {\r\n            return () => {\r\n                return --count\r\n            }\r\n        },\r\n        reset: () => {\r\n            return () => {\r\n                count = x;\r\n                return count\r\n            }\r\n        },\r\n        set: (y: number) => {\r\n            return () => {\r\n                count = y;\r\n                return count\r\n            }\r\n        }\r\n    };\r\n}\r\nlet num = newCounter(2).increase();\r\nconsole.log(\"2 ++ : \" + num());\r\nconsole.log(\"2 ++ : \" + num());\r\nconsole.log(\"2 ++ : \" + num());\r\nlet num2 = newCounter(5).increase();\r\nconsole.log(\"5 ++ : \" + num2());\r\nconsole.log(\"5 ++ : \" + num2());\r\nconsole.log(\"5 ++ : \" + num2());\r\nlet num3 = newCounter(2).decrease();\r\nconsole.log(\"2 -- : \" + num3());\r\nconsole.log(\"2 -- : \" + num3());\r\nconsole.log(\"2 -- : \" + num3());\r\nlet num4 = newCounter(5).decrease();\r\nconsole.log(\"5 -- : \" + num4());\r\nconsole.log(\"5 -- : \" + num4());\r\nconsole.log(\"5 -- : \" + num4());\r\nlet num5 = newCounter(10);\r\nconsole.log(\"10 -- : \" + num5.decrease()());\r\nconsole.log(\"10 -- : \" + num5.decrease()());\r\nconsole.log(\"10 reset : \" + num5.reset()());\r\nconsole.log(\"10 -- : \" + num5.decrease()());\r\nlet num6 = newCounter(7)\r\nconsole.log(\"7 -- : \" + num6.decrease()());\r\nconsole.log(\"7 set 11  : \" + num6.set(11)());\r\nconsole.log(\"11 ++ : \" + num6.increase()())\r\n\r\n// Task 04*\r\n// Реализовать функцию superSum которая принимает число в качестве аргумента, которое указывает на количество слагаемых\r\n// и что бы корректно работали следующие вызовы:\r\n// 1) (0) //0\r\n// 2) superSum(3)(2)(5)(3) //10\r\n// 3) superSum(3)(2)(5,3) //10\r\n// 4) superSum(3)(2,5,3) //10\r\n// 5) superSum(3)(2,5)(3) //10\r\n// 6) superSum(3)(2,5)(3,9) //10\r\n\r\n// P.S. типизируйте только аргументы, а при вызове функции используйте @ts-ignore\r\n\r\n//@ts-ignore\r\nfunction superSum(n: number) {\r\n    if(n <= 0 ) return 0\r\n\r\n    let _args: number[] = []\r\n\r\n    const carry = (...args: number[]) => {\r\n        _args = [..._args, ...args]\r\n        if(_args.length >= n){\r\n            _args.length = n\r\n            return _args.reduce((acc: any, number) => acc + number)\r\n        }\r\n        return carry\r\n    }\r\n    return carry\r\n}\r\n\r\n\r\n//@ts-ignore\r\nconsole.log( \"superSum : \"+ superSum(0) );//@ts-ignore\r\n/*\r\nconsole.log( \"superSum : \"+ curry(superSum(3)(2)  )); //@ts-ignore\r\n\r\nconsole.log( \"superSum : \"+ superSum(3)(2)(5,3) );//@ts-ignore\r\nconsole.log( \"superSum : \"+ superSum(3)(2,5,3));//@ts-ignore\r\nconsole.log( \"superSum : \"+ superSum(3)(2,5)(3) );//@ts-ignore\r\nconsole.log( \"superSum : \"+ superSum(3)(2,5)(3,9) );//@ts-ignore\r\n*/\r\n\r\n\r\n\r\n\r\n// Task 05\r\n// решить все задачи по рекурсии которые даны в конце статьи https://learn.javascript.ru/recursion\r\n\r\nconst sumTo = (n: number) => {\r\n    let result = 0;\r\n    for (let i = 0; i <= n; i++) {\r\n        result += i;\r\n    }\r\n    return result\r\n}\r\n\r\nconsole.log('sum ver1 number 5 : ' + sumTo(5))\r\n\r\nconst sumTo2 = (n: number): number => {\r\n    if (n < 1) {\r\n        return n\r\n    } else {\r\n        return n + sumTo2(n - 1)\r\n    }\r\n}\r\nconsole.log('sum ver2 number 5 : ' + sumTo2(5))\r\n\r\nconst factorial = (n: number): number => {\r\n    if (n === 1) {\r\n        return 1\r\n    } else {\r\n        return n * factorial(n - 1)\r\n    }\r\n}\r\nconsole.log(\"factorial 5 : \" + factorial(5))\r\n\r\nlet list = {\r\n    value: 1,\r\n    next: {\r\n        value: 2,\r\n        next: {\r\n            value: 3,\r\n            next: {\r\n                value: 4,\r\n                next: null\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nfunction printList(list: any) {\r\n\r\n    console.log(\"list el : \" + list.value);\r\n    if (list.next) {\r\n        printList(list.next);\r\n    }\r\n}\r\n\r\nprintList(list);\r\n\r\nfunction printListRevers(list: any) {\r\n\r\n\r\n    if (list.next) {\r\n        printListRevers(list.next);\r\n    }\r\n\r\n    console.log(\"listReverse el : \" + list.value);\r\n}\r\n\r\nprintListRevers(list);\r\n\r\n// Task 06\r\n// написать функцию, которая повторяет функционал метода flat массива на всю глубину.\r\nconst arr = [1, 2, [3, 4, [5, 6]]];\r\n\r\nconst flatRecurs =(arr:any, d = 1)=> {\r\n    return d > 0 ? arr.reduce((acc:Array<number>, val:Array<number>) => acc.concat(Array.isArray(val) ? flatRecurs(val, d - 1) : val), [])\r\n        : arr.slice();\r\n};\r\n\r\nconsole.log(\"flatRecursive : \"+flatRecurs(arr, Infinity));\r\nconsole.log(\"flat casual : \"+arr.flat(Infinity));\r\n// just a plug\r\n\r\n\r\nexport default {};","E:\\JS\\it-incubator\\JS Lessons\\src\\lessons\\lesson4\\lesson_4.ts",["117","118","119"],{"ruleId":"120","severity":2,"message":"121","line":25,"column":10,"nodeType":"122","endLine":25,"endColumn":35},{"ruleId":"123","severity":1,"message":"124","line":63,"column":1,"nodeType":"125","endLine":63,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":6,"column":7,"nodeType":"128","messageId":"129","endLine":6,"endColumn":10},{"ruleId":"126","severity":1,"message":"130","line":7,"column":7,"nodeType":"128","messageId":"129","endLine":7,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":62,"column":1,"nodeType":"125","endLine":62,"endColumn":23},{"ruleId":"126","severity":1,"message":"131","line":33,"column":5,"nodeType":"128","messageId":"129","endLine":33,"endColumn":24},{"ruleId":"126","severity":1,"message":"132","line":57,"column":5,"nodeType":"128","messageId":"129","endLine":57,"endColumn":8},{"ruleId":"126","severity":1,"message":"133","line":58,"column":5,"nodeType":"128","messageId":"129","endLine":58,"endColumn":8},{"ruleId":"126","severity":1,"message":"134","line":70,"column":10,"nodeType":"128","messageId":"129","endLine":70,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":82,"column":1,"nodeType":"125","endLine":82,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":39,"column":1,"nodeType":"125","endLine":40,"endColumn":3},{"ruleId":"123","severity":1,"message":"124","line":45,"column":1,"nodeType":"125","endLine":45,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":13,"column":1,"nodeType":"125","endLine":14,"endColumn":3},{"ruleId":"135","severity":1,"message":"136","line":15,"column":7,"nodeType":"128","messageId":"129","endLine":15,"endColumn":11},{"ruleId":"137","severity":1,"message":"138","line":48,"column":13,"nodeType":"139","messageId":"140","endLine":50,"endColumn":3},{"ruleId":"135","severity":1,"message":"141","line":56,"column":10,"nodeType":"128","messageId":"129","endLine":56,"endColumn":14},{"ruleId":"135","severity":1,"message":"142","line":93,"column":7,"nodeType":"128","messageId":"129","endLine":93,"endColumn":12},{"ruleId":"135","severity":1,"message":"143","line":12,"column":8,"nodeType":"128","messageId":"129","endLine":12,"endColumn":11},{"ruleId":"126","severity":1,"message":"144","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"123","severity":1,"message":"145","line":249,"column":1,"nodeType":"125","endLine":249,"endColumn":19},{"ruleId":"126","severity":1,"message":"146","line":1,"column":9,"nodeType":"128","messageId":"129","endLine":1,"endColumn":14},{"ruleId":"126","severity":1,"message":"147","line":12,"column":7,"nodeType":"128","messageId":"129","endLine":12,"endColumn":12},{"ruleId":"123","severity":1,"message":"124","line":83,"column":1,"nodeType":"125","endLine":83,"endColumn":23},"react/jsx-no-undef","'CurrencyExchangeContainer' is not defined.","JSXIdentifier","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","'axiosInstance' is assigned a value but never used.","'someObj' is assigned a value but never used.","'One' is assigned a value but never used.","'Two' is assigned a value but never used.","'sumTwoNumbers' is defined but never used.","no-unused-vars","'tree' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","FunctionExpression","unsafeRefs","'Book' is defined but never used.","'tree2' is assigned a value but never used.","'end' is assigned a value but never used.","'React' is defined but never used.","Assign object to a variable before exporting as module default","'posix' is defined but never used.","'task1' is assigned a value but never used."]